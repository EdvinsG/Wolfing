import os
import requests
import hashlib
import hmac
import time

API_KEY = os.getenv('BINANCE_API_KEY')
API_SECRET = os.getenv('BINANCE_API_SECRET')

base_url = 'https://api.binance.com'
headers = {
    'X-MBX-APIKEY': API_KEY
}

def create_order(symbol, side, quantity, price):
    endpoint = '/api/v3/order'
    params = {
        'symbol': symbol,
        'side': side,
        'type': 'LIMIT',
        'timeInForce': 'GTC',
        'quantity': quantity,
        'price': price
    }
    params['timestamp'] = int(time.time() * 1000)
    query_string = '&'.join([f"{k}={v}" for k, v in params.items()])
    signature = hmac.new(API_SECRET.encode('utf-8'), query_string.encode('utf-8'), hashlib.sha256).hexdigest()
    params['signature'] = signature
    response = requests.post(base_url + endpoint, headers=headers, params=params)
    return response.json()

# Example usage
symbol = 'BTCUSDT'  # Trading pair
side = 'BUY'        # BUY or SELL
quantity = 0.01     # Quantity of crypto to swap
price = 50000       # Price at which to execute the swap

response = create_order(symbol, side, quantity, price)
print(response)
